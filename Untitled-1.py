from modules import criar_equipamentos, configuracao_tipo_objeto
import streamlit as st
from streamlit_option_menu import option_menu

if "page_configured" not in st.session_state:
    st.set_page_config(page_title="Gest√£o de Equipamentos", layout="wide")
    st.session_state.page_configured = True

# Menu de topo com √≠cones
menu_topo = option_menu(
    menu_title=None,
    options=["Home", "Equipamentos", "Destinat√°rios", "Manuten√ß√£o", "Relat√≥rios"],
    icons=["house", "truck", "building", "wrench", "report"],
    orientation="horizontal"
)

# Menu lateral dependente do menu de topo
if menu_topo == "Home":
    st.sidebar.header("‚öôÔ∏è Configura√ß√µes")
    config_secao = st.sidebar.radio("√Årea:", ["Equipamentos", "Manuten√ß√£o", "Destinat√°rios"])
    if config_secao == "Equipamentos":
        submenu = st.sidebar.radio("Op√ß√£o:", [
            "Categorias",
            "Tipo de Objeto",
            "Classifica√ß√£o (Classes)",
            "Abate de equipamento",
            "Tipo Tra√ß√£o",
            "Contadores",
            "Gest√£o de campos"
        ])
        if submenu == "Tipo de Objeto":
            with st.container():
                configuracao_tipo_objeto.show()
        elif submenu == "Categorias":
            st.info("[Placeholder] Configura√ß√£o: Categorias")
        else:
            st.info(f"[Placeholder] Configura√ß√£o: {submenu}")
    elif config_secao == "Manuten√ß√£o":
        submenu = st.sidebar.radio("Op√ß√£o:", ["Tipos de Planos"])
        st.info(f"[Placeholder] Configura√ß√£o: {submenu}")
    elif config_secao == "Destinat√°rios":
        submenu = st.sidebar.radio("Op√ß√£o:", ["Tipo de destinat√°rio"])
        st.info(f"[Placeholder] Configura√ß√£o: {submenu}")
    elif config_secao == "Relat√≥rios":
        submenu = st.sidebar.radio("Op√ß√£o:", ["Resumo de horas"])
        st.info(f"[Placeholder] Configura√ß√£o: {submenu}")
        

elif menu_topo == "Equipamentos":
    st.sidebar.header("üì¶ Gest√£o de Equipamentos")
    submenu = st.sidebar.radio("Sec√ß√£o:", ["Criar Novo", "Editar", "Listagem", "Movimenta√ß√£o", "Documento de envio"])
    if submenu == "Criar Novo":
        criar_equipamentos.show()
    else:
        st.info(f"[Placeholder] Sec√ß√£o selecionada: {submenu}")
    st.sidebar.markdown("**Stocks**")
    st.sidebar.write("- Listagem")
    st.sidebar.markdown("**Tarifas**")
    st.sidebar.write("- Criar")
    st.sidebar.write("- Modificar")
    st.sidebar.write("- Listagem")
    st.sidebar.markdown("**Fatura√ß√£o/liquida√ß√£o**")
    st.sidebar.write("- Calend√°rio de liquida√ß√£o")
    st.sidebar.write("- Verifica√ß√£o de Erros")
    st.sidebar.write("- Fatura√ß√£o")

elif menu_topo == "Destinat√°rios":
    st.sidebar.header("üè¢ Gest√£o de Destinat√°rios")
    submenu = st.sidebar.radio("A√ß√µes:", ["Criar Novo", "Editar", "Listagem"])
    st.info(f"[Placeholder] Destinat√°rios ‚Üí {submenu}")

elif menu_topo == "Manuten√ß√£o":
    st.sidebar.header("üõ†Ô∏è Gest√£o de Manuten√ß√£o")
    submenu = st.sidebar.radio("Plano:", ["Criar Plano de manuten√ß√£o", "Criar Nota de Manuten√ß√£o", "Criar Ordem de Manuten√ß√£o"])
    st.info(f"[Placeholder] Manuten√ß√£o ‚Üí {submenu}")
elif menu_topo == "Relat√≥rios":
    st.sidebar.header("üõ†Ô∏è Relat√≥rio de horas")
    submenu = st.sidebar.radio("Horas:", ["Criar Calend√°rio de horas", "Calend√°ro e liquida√ß√£o", "Ajustes"])
    st.info(f"[Placeholder] Relat√≥rios ‚Üí {submenu}")
